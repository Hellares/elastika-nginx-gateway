# /opt/elastika-nginx-gateway/nginx/conf.d/services.conf

# Upstream definitions
upstream images_service {
    server images-server:3500;
    keepalive 32;
}

upstream auth_service {
    server auth-service:3002;
    keepalive 16;
}

upstream files_service {
    server files-service:3001;
    keepalive 16;
}

# Main server block
server {
    listen 80;
    server_name _;

    # ========================================
    # IMAGES SERVICE
    # ========================================
    
    # Servir archivos estáticos directamente (SUPER RÁPIDO)
    location ~ ^/files/(.+\.(jpg|jpeg|png|gif|webp|svg|pdf|csv|xlsx|docx))$ {
        limit_req zone=files burst=100 nodelay;
        
        alias /var/images/$1;
        
        # Cache agresivo
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        
        # Si no existe, ir al backend
        error_page 404 = @images_backend;
        
        # No log para archivos estáticos
        access_log off;
        log_not_found off;
    }
    
    # API de imágenes
    location ~ ^/(upload|files-list|quota)$ {
        limit_req zone=uploads burst=10 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts para uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        proxy_pass http://images_service;
    }

    # ========================================
    # AUTH SERVICE
    # ========================================
    
    # Login endpoints (rate limiting estricto)
    location ~ ^/api/auth/(login|signin|authenticate|register)$ {
        limit_req zone=login burst=3 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No cache para auth críticos
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        
        rewrite ^/api/auth/(.*)$ /$1 break;
        proxy_pass http://auth_service;
    }
    
    # Otros endpoints de auth
    location /api/auth/ {
        limit_req zone=auth burst=20 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        rewrite ^/api/auth/(.*)$ /$1 break;
        proxy_pass http://auth_service;
    }

    # ========================================
    # FILES SERVICE
    # ========================================
    
    location /api/files/ {
        limit_req zone=api burst=30 nodelay;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        rewrite ^/api/files/(.*)$ /$1 break;
        proxy_pass http://files_service;
    }

    # ========================================
    # HEALTH CHECKS
    # ========================================
    
    location /health {
        access_log off;
        return 200 '{"status":"ok","gateway":"nginx","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    location /health/images {
        proxy_pass http://images_service/health;
    }
    
    location /health/auth {
        proxy_pass http://auth_service/health;
    }

    # ========================================
    # FALLBACKS Y ERRORS
    # ========================================
    
    location @images_backend {
        proxy_pass http://images_service;
    }
    
    # Default - puede ser frontend o API docs
    location / {
        return 200 '{"message":"Elastika API Gateway","version":"1.0.0","services":["images","auth","files"]}';
        add_header Content-Type application/json;
    }
}
